# -*- coding: utf-8 -*-
"""문제해결(울릉도)1105노가현.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ml4J_BI_vKlrT-3M1M9Zr13KAgBIpCoU
"""

# 그래프에 한글 폰트 사용하는 코드 -> 실행 후 [런타임]-[런타임 다시 시작] 메뉴를 이용하여 런타임 재시작!
!sudo apt-get install -y fonts-nanum # 나눔 소문자로
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

# 런타임 재시작 이후 한글 폰트 선택
import matplotlib.pyplot as plt
plt.rc('font', family='NanumBarunGothic')

"""> ## ** 문제 1) 가장 무더웠던 날이 언제이며,이날의 평균 기온, 평균 풍속, 최대 풍속을 구하시오"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# 코랩에서 데이터 파일을 사용하기 위해 직접 업로드하는 코드
from google.colab import files
file_uploaded = files.upload()

df = pd.read_csv('weather (1).csv', encoding = 'CP949') # CP949(확장 완성형), MS (MAC은 UTF-8)
df

df.shape # index : 0~3652  / colums : 일시 평균기온 최대풍속 평균풍속

df.head()

df.info()

# 데이터프레임 통계, 문자 빼고... count : 값이 있는 것 , mean : 평균 , std : 표준편차, 25% : 25분위, 50% : 중앙값, 75% : 75분위, min : 최소값, max : 최대값
df.describe()

# 결측치 구하기
df.isnull().sum() # 속성별로 결측치를 세어줌
df['평균풍속'].isnull().sum()

# 평균기온의 최소값, 평균기온의 최소값은 -9.000000 도 입니다.
df['평균기온'].min()
print(f"평균기온의 최소값은 {df['평균기온'].min()}도 입니다.")

# 가장 무더웠던 날을 구하시오
df['평균기온'].max()

# 31.3도인 날의 일시를 구하시오
hot = df['평균기온'].max()
hotday= df['일시'][df['평균기온'] == hot]
hotday 
# 1103 : 인덱스

type(hotday)

# 가장 더웠던 날은 2013-08-08로 31.3도 입니다.
print(f"가장 더웠던 날은 {hotday[1103]}로 {hot}도 입니다.")
print(f"가장 더웠던 날은 {df['일시'][1103]}로 {hot}도 입니다.")

hottest = df.loc[df['평균기온'] == hot] # 원하는 결과만을 자르는 것 (가로축을 중심으로)
# df.loc : location의 약자로 데이터프레임의 행 또는 칼럼의 label이나 boolean array로 인덱싱하는 방법.
# - 칼럼명을 직접 적거나 특정 조건식을 써주어 사람이 읽을 수 있게 데이터에 접근하는 방법

print("가장 무더웠던 날")
print("=" * 50)
hottest

"""> ## ** 문제 2) 울릉도의 평균기온이 30도가 넘는 날을 찾아, 이날의 기상데이터를 나열해 보시오."""

hottest = df.loc[df['평균기온'] >= 30] 

print("평균 기온이 30도 넘는 날")
print("=" * 50)
hottest

"""> ## ** 문제 3) 울릉도는 몇 월에 바람이 가장 강할까? (막대그래프 출력)"""

# 슬라이싱을 이용하여 월을 잘라내어, 기존 데이터프레임에 컬럼을 추가시켜도 됩니다.
# 월 별로 데이터를 다시 분류하기 위해 '월' 속성을 부여해도 됩니다.

df['일시'].str[5:7] # 월
df['일시'].str[8:] # 일

df['월'] = df['일시'].str[5:7] # 월 속성 추가
df

# 월별로 묶어봅시다. groupby()
df_group = df.groupby('월')['평균풍속'].mean()
df_group

# 월별로 가장 추웠던 날
cold = df.groupby('월')['평균기온'].min()
cold

# 몇 월에 바람이 가장 강할까?
# 1. df_group[df_group == df_group.max()]
df_group.index[df_group == df_group.max()] # 인덱스 추출
re = df_group.index[df_group == df_group.max()].tolist()

print(f'울릉도는 {re[0]}월에 가장 바람이 강합니다.')

# x : 월
# y : 평균픙속
# 막대그래프 출력, 자료구조 변환 -> 리스트

wind = df_group

y = wind.tolist() # 풍속
y

x = wind.index.tolist() # 인덱스, 월
x

plt.bar(x, y)

plt.title('울릉도 월별 풍속')
plt.xlabel('월')
plt.ylabel('풍속')

for i in range(len(x)):
  if y[i] == max(y) :
    plt.text(i, y[i], round(y[i], 1), ha = 'center', size = 12, color = 'r')
  else :
    plt.text(i, y[i], round(y[i], 1), ha = 'center')

plt.show()
